
Course "React + Redux - Профессиональная Разработка"
https://www.udemy.com/course/pro-react-redux/
https://github.com/Juriy/pro-react-redux

* 1.4
npm i -g create-react-app
create-react-app todo
cd todo
npm start

* 1.5
git clone git@github.com:Juriy/pro-react-redux.git
cd pro-react-redux/todo/00-empty-react-project
npm install
npm audit fix --force
npm start

* 1.6
babel - transpiler, allow to use new features before inclusion into standard

* 4.34
Вначале - компонент-функция. Если все же надо работать со внутренним состоянием - переделать в компонент-класс

* 4.38
При необходимости обновления состояния, зависящего от предыдущего состояния - в обработчик передавать arrow-function

* 7.64 Этапы работы компонента:
mounting	componentDidMount()		компонент "подключен" (DOM элементов уже на странице); хорошее место, чтобы получать данные

updates		componentDidUpdate()	компонент обновился (получил новые св-ва или state); если в этом методе может изменяться state - обязательно проверять, какое именно св-во изменилось, иначе компонент рискует уйти в вечный цикл обновления

unmounting	componentWillUnmount()	вызывается прямо перед тем, как компонент будет удален (но DOM еще на странице); используется для очистки ресурсов (таймеры, интервалы, запросы к серверу)

error		componentDidCatch()		в компоненте произошла ошибка; принимает 2 аргумента - error и info с дополнительно информацией об источнике ошибок

* 7.71
npm run build		# make producation build
npm install --global http-server	# install http-server using npm
http-server build	# start producation server from 'build' folder
